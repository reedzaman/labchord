{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,IAAIC,GAAU,EACVC,EAAWC,SAASC,eAAe,gBAKvCD,SAASE,iBAAiB,SAAUC,IACf,UAAdA,EAAMC,MACL,EAAAC,EAAAC,oBAGDP,EAASQ,MAAMC,OAAS,EACnBV,IACAA,GAAU,EACVF,EAAAa,OAAOC,KAAK,WAGbZ,IACCA,GAAU,EACVF,EAAAa,OAAOC,KAAK,iB,IAQxBX,EAASG,iBAAiB,YAAY,KAC/BJ,IACCA,GAAU,EACVF,EAAAa,OAAOC,KAAK,iB,IAMpBX,EAASG,iBAAiB,WAAW,KAC9BH,EAASQ,MAAMC,OAAS,IACnBV,IACAA,GAAU,EACVF,EAAAa,OAAOC,KAAK,W","sources":["src/scripts/control/typingIndicator.js"],"sourcesContent":["import { socket } from './client.js';\nimport { handleSubmission } from './eventListeners';\n\nlet writing = false;\nlet msgInput = document.getElementById('textInputBox');\n\n// checks if user is writing\n// ... if writing, emits 'typing' once (no repeating emitting)\n// ... if not, emits 'stoppedTyping' once (no repeating emitting)\ndocument.addEventListener('keyup', (event)=>{\n    if(event.key === 'Enter') {\n        handleSubmission();\n    }\n\n    if(msgInput.value.length > 0){\n        if(!writing){\n            writing = true;\n            socket.emit('typing');\n        }\n    } else {\n        if(writing){\n            writing = false;\n            socket.emit('stoppedTyping');\n        }\n    }\n});\n\n\n// if the focus shifts from the input box,\n// emits 'stoppedTyping'\nmsgInput.addEventListener('focusout', () => {\n    if(writing){\n        writing = false;\n        socket.emit('stoppedTyping');\n    }\n})\n\n// if the focus returns to the input box (previously at writing state),\n// emits 'typing'\nmsgInput.addEventListener('focusin', () => {\n    if(msgInput.value.length > 0){\n        if(!writing){\n            writing = true;\n            socket.emit('typing');\n        }\n    }\n});\n"],"names":["$eSQOb","parcelRequire","$b95a83c538d7073c$var$writing","$b95a83c538d7073c$var$msgInput","document","getElementById","addEventListener","event","key","$6H7VJ","handleSubmission","value","length","socket","emit"],"version":3,"file":"index.1d7fbb70.js.map"}